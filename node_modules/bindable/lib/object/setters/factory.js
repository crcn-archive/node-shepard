// Generated by CoffeeScript 1.6.2
(function() {
  var BindableSetter, CollectionSetter, FnSetter;

  FnSetter = require("./fn");

  BindableSetter = require("./bindable");

  CollectionSetter = require("./collection");

  module.exports = (function() {
    function _Class() {}

    /*
    */


    _Class.prototype.createSetter = function(binding, target, property) {
      var callback, to, toProperty;

      to = null;
      toProperty = null;
      callback = null;
      if (!target && !property) {
        return null;
      }
      if (typeof property === "string") {
        to = target;
        toProperty = property;
      } else if (typeof target === "string") {
        to = binding._from;
        toProperty = target;
      } else if (typeof target === "function") {
        callback = target;
      } else if (typeof target === "object" && target) {
        if (target.__isBinding) {
          throw new Error("Cannot bind to a binding.");
        } else if (target.__isCollection) {
          return new CollectionSetter(binding, target);
        }
      }
      if (callback) {
        return new FnSetter(binding, callback);
      } else if (to && toProperty) {
        return new BindableSetter(binding, to, toProperty);
      }
      return null;
    };

    return _Class;

  })();

}).call(this);
