// Generated by CoffeeScript 1.6.2
(function() {
  var FnSetter, _, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require("underscore");

  FnSetter = require("./fn");

  module.exports = (function(_super) {
    __extends(_Class, _super);

    function _Class() {
      _ref = _Class.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    _Class.prototype.init = function() {
      var _this = this;

      _.defaults(this.target, {
        insert: (function(item) {}),
        remove: (function(item) {}),
        reset: (function(item) {})
      });
      return this._setter = new FnSetter(this.binding, function(method, item, index) {
        return _this.target[method].call(_this.target, item, index);
      });
    };

    /*
    */


    _Class.prototype.now = function() {
      return this._setter.now();
    };

    /*
    */


    _Class.prototype._change = function() {
      return this._setter._change.apply(this._setter, arguments);
    };

    return _Class;

  })(require("./base"));

}).call(this);
