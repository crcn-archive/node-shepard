{
  "name": "hoist",
  "version": "0.0.6",
  "description": "Synchronous mappings:",
  "main": "./lib/index.js",
  "scripts": {
    "test": "make clean all test-web; mocha ./test; karma start"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/classdojo/hoist.js.git"
  },
  "author": "",
  "license": "BSD",
  "readmeFilename": "README.md",
  "gitHead": "02c4d43ea4361f6b1ea4610d78172a6ba9b7e2ac",
  "dependencies": {
    "async": "0.2.x",
    "type-component": "0.0.x"
  },
  "devDependencies": {
    "mocha": "1.8.x",
    "expect.js": "0.2.x",
    "structr": "0.2.x",
    "sardines": "0.4.x",
    "karma": "0.8.x"
  },
  "readme": "### Hoist makes it easy to transform your objects.\n\n![Hoist Transformer](http://f.cl.ly/items/3N1k3r3V0D2R1v1u3u32/hoist.jpg \"Hoist\")\n\n\nSynchronous mappings:\n\n```javascript\nvar hoist = require(\"hoist\");\nvar castNumValue = hoist.cast(Number).map(function(num) {\n  return {\n    value: num\n  }\n});\n\nvar castArray = house.cast(Array);\n\nconsole.log(castNumValue(\"5\")); //{ value: 5 }\nconsole.log(castNumValue({ value: 5 })); //{ value: 5 }\nconsole.log(castArray(5)); //[5]\nconsole.log(castArray([5])); //5\n\n```\n\nAsynchronous mappings:\n\n```javascript\nvar castNumValue = hoist.cast(Number).map(function(num, next) {\n  setTimeout(next, 500, null, { value: num });\n});\n\ncastNumValue(\"5\", function(err, result) {\n  console.log(result); //{ value: 5 }\n})\n\ncastNumValue(\"5\"); //error thrown for casting against asynchronous caster\n```\n",
  "bugs": {
    "url": "https://github.com/classdojo/hoist.js/issues"
  },
  "_id": "hoist@0.0.6",
  "_from": "hoist@0.0.x"
}
