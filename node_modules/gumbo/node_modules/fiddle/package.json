{
  "author": {
    "name": "Craig Condon"
  },
  "name": "fiddle",
  "description": "mongodb inspired object manipulation",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/crcn/fiddle.js.git"
  },
  "main": "./lib/index.js",
  "dependencies": {
    "sift": "0.0.x",
    "clone": "0.0.x",
    "deep-equal": "0.0.x",
    "traverse": "0.5.x",
    "dref": "0.0.x"
  },
  "devDependencies": {},
  "readme": "### Features\n\n- supported operators: $inc, $set, $unset, $push, $pushAll, $addToSet, $each, $pop, $pull, $pullAll, $rename, $bit\n\n\n### Examples\n\n```javascript\nvar fiddle = require('fiddle');\n\n//increment age by one\nvar fiddled = fiddle({$inc:{age:1}}, null, { name: \"Craig\", age: 21 }); //{ name: \"Craig\", age: 22 }\n\n//check if the age is less than 22 before modifying\nfiddled = fiddle({$inc:{$age:1}}, {age:{$lt:22}}, fiddled); //{ name: \"Craig\", age: 22 }\n\n\n//return a function instead\nvar fiddler = fiddle({$inc:{n:1}});\n\n//modify it\nfiddler({ name: \"Joe\" }); //{ name: \"Joe\", n: 1}\n\n//modify multiple\nfiddler([ {name: \"Joe\" }, { name: \"John \"}])\n```\n\n\n### Filter Example\n\n\n```javascript\nvar fiddle = require('fiddle');\n\nvar fiddler = fiddle({$inc:{n:1}},{age:{$lt:25}});\n\n//result: {name:\"Craig\",age:22, n:1}, {name:\"Tim\",age:21,n:1}\nfiddler([{\n\tname: \"Craig\",\n\tage: 22\n},\n{\n\tname: \"Tim\",\n\tage: 21\n},\n{\n\tname: \"John\",\n\tage: 25\n}]);\n```\n\n\n### API\n\n#### .fiddle(modifiers[, filter][, targets])\n\n- `modifiers` - the modifiers against the given target / targets\n- `filter` - the optional filter to check against the targets. Can be mongodb expression, regexp, or function\n- `targets` - the target / targets to modify\n",
  "readmeFilename": "README.md",
  "_id": "fiddle@0.0.1",
  "dist": {
    "shasum": "ebc9f7bed37fa20a40658021806734f2b5be3ce5"
  },
  "_from": "fiddle@0.0.x",
  "_resolved": "http://registry.npmjs.org/fiddle/-/fiddle-0.0.1.tgz"
}
